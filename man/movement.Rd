% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/movement.R
\name{movement}
\alias{movement}
\title{Create an optimised movement model}
\usage{
movement(locationdataframe, movement_matrix, flux_model, ...)
}
\arguments{
\item{locationdataframe}{A \code{locationdataframe} object, i.e. a data.frame
containing location data with the column name \code{locations}, \code{population},
\code{long} and \code{lat}.}

\item{movement_matrix}{A square matrix containing the observed population
movements between \code{locations}}

\item{flux_model}{The name of the movement model to use. Currently supported
models are \code{original radiation}, \code{radiation with selection},
\code{uniform selection}, \code{intervening opportunities},
\code{gravity}}

\item{\dots}{Extra parameters to be passed to the prediction code.}
}
\value{
An \code{optimisedmodel} object containing the training results,
and the optimisation results. This can then be used by
\code{\link{predict.movementmodel}} to generate predictions on new data.
}
\description{
Uses the \code{\link{optim}} method to create an optimised model of
population movements.
}
\note{
The most likely format of the location data will be as a single
\code{data.frame} with the columns \code{location}, \code{population}, \code{lat} and
\code{long}. This can be extracted from a larger dataframe with
\code{\link{as.locationdataframe}}
The \code{movement_matrix} can be extracted from a list of movements
using \code{\link{as.movementmatrix}}
}
\examples{
# load kenya raster
data(kenya)
# aggregate to 10km to speed things up
kenya10 <- raster::aggregate(kenya, 10, sum)
# create the prediction model for the aggregate dataset using the fixed parameter radiation model
predictionModel <- movementmodel(dataset=kenya10,
                                 min_network_pop = 50000,
                                 flux_model = origin.radiation(),
                                 symmetric = TRUE)
# predict the population movement from the model
predictedMovements = predict(predictionModel)
# visualise the distance matrix
sp::plot(raster::raster(predictedMovements$net$distance_matrix))
# visualise the predicted movements overlaid onto the original raster
showprediction(predictedMovements)
}
\seealso{
\code{\link{predict.movementmodel}}, \code{\link{as.locationdataframe}},
\code{\link{as.movementmatrix}}
}

